FROM debian:11-slim AS installer

ENV DEBIAN_FRONTEND noninteractive

USER root

# Create non-root user
ARG PUID=1000
ENV PUID=${PUID}
ARG PGID=1000
ENV PGID=${PGID}

# Create user
RUN groupadd --gid ${PGID} dev && \
  useradd \
    --create-home \
    --home /home/dev \
    --shell /bin/bash \
    --uid ${PUID} \
    --gid dev \
    dev

# Install Neovim Git
RUN set -xe; \
  apt-get update -y && \
  apt-get install -y \
    curl \
    git \
    zsh

ENV HOME=/home/dev
ENV ZSH_CUSTOM=${HOME}/.oh-my-zsh/custom

USER dev

WORKDIR ${HOME}

# Setup zsh
RUN set -xe; \
  mkdir -p ${HOME}/${ZSH_CUSTOM}/plugins && \
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" && \
  git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM}/plugins/zsh-autosuggestions

# Set system environment variables
ENV LANG=C.UTF-8 \
  LC_ALL=C.UTF-8

USER dev

WORKDIR ${HOME}

ARG NODE_VERSION=node
ENV INSTALL_VERSION=${NODE_VERSION}
ENV NVM_DIR=${HOME}/.nvm

# Install nvm
RUN set -xe; \
  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash && \
  . ${NVM_DIR}/nvm.sh && \
  nvm install ${INSTALL_VERSION} && \
  npm install -g \
    intelephense \
    neovim \
    npm@latest \
    typescript \
    typescript-language-server \
    vscode-langservers-extracted

FROM debian:11-slim

ENV DEBIAN_FRONTEND noninteractive

USER root

# Create non-root user
ARG PUID=1000
ENV PUID=${PUID}
ARG PGID=1000
ENV PGID=${PGID}

# Create user
RUN groupadd --gid ${PGID} dev && \
  useradd \
    --create-home \
    --home /home/dev \
    --shell /bin/bash \
    --uid ${PUID} \
    --gid dev \
    dev

# Set timezone
ARG TZ=UTC
ENV TZ=${TZ}

RUN ln -snf /usr/share/zoneinfo/${TZ} /etc/localtime && echo ${TZ} > /etc/timezone

# Install essentials
RUN set -xe; \
  apt-get update -y && \
  apt-get install -y \
    apt-transport-https \
    build-essential \
    ca-certificates \
    curl \
    lsb-release \
    git \
    ripgrep \
    unzip \
    zsh && \
  chsh -s $(which zsh) && \
  sh -c "$(curl -fsSL https://starship.rs/install.sh)" -y -f

ARG PHP_VERSION=8.3
ENV PHP_VERSION=${PHP_VERSION}

# Install PHP-FPM
RUN set -xe; \
  curl https://packages.sury.org/php/apt.gpg -o /etc/apt/trusted.gpg.d/php.gpg && \
  sh -c 'echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" > /etc/apt/sources.list.d/php.list' && \
  apt-get update -y && \
  apt-get install -y \
    php${PHP_VERSION}-mbstring \
    php${PHP_VERSION}-fpm \
    php${PHP_VERSION}-tokenizer \
    php${PHP_VERSION}-xml \
    php${PHP_VERSION}-zip

# Install Composer
RUN set -xe; \
  php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" && \
  php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;" && \
  php composer-setup.php && \
  php -r "unlink('composer-setup.php');" && \
  mv composer.phar /usr/local/bin/composer

ENV HOME=/home/dev
ENV ZSH_CUSTOM=${HOME}/.oh-my-zsh/custom

# Set system environment variables
ENV LANG=C.UTF-8 \
  LC_ALL=C.UTF-8

# Install Neovim
RUN set -xe; \
  curl -OL https://github.com/neovim/neovim/releases/download/nightly/nvim.appimage && \
  chmod ugo+x nvim.appimage && \
  mv nvim.appimage /usr/local/bin

# Install php-cs-fixer
RUN set -xe; \
  curl -L https://cs.symfony.com/download/php-cs-fixer-v3.phar -o php-cs-fixer && \
  chmod ugo+x php-cs-fixer && \
  mv php-cs-fixer /usr/local/bin

USER dev

WORKDIR ${HOME}

COPY --chown=${PUID}:${PGID} .zshrc ${HOME}

RUN mkdir -p ${HOME}/.nvm ${HOME}/.oh-my-zsh

COPY --from=installer ${HOME}/.nvm ${HOME}/.nvm
COPY --from=installer ${HOME}/.oh-my-zsh ${HOME}/.oh-my-zsh

# Powerline fonts
RUN set -xe; \
  mkdir -p \
    ${HOME}/Projects \
    ${HOME}/.local/share/fonts \
    ${HOME}/.config/fontconfig/conf.d && \
  curl -O https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf && \
  curl -O https://github.com/powerline/powerline/raw/develop/font/10-powerline-symbols.conf && \
  mv PowerlineSymbols.otf ${HOME}/.local/share/fonts/ && \
  mv 10-powerline-symbols.conf ${HOME}/.config/fontconfig/conf.d/

# Neovim config files
COPY --chown=${PUID}:${PGID} nvim ${HOME}/.config/nvim
COPY --chown=${PUID}:${PGID} starship.toml ${HOME}/.config

USER root

# Clean up
RUN apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
    rm /var/log/lastlog /var/log/faillog

RUN chown -R ${PUID}:${PUID} ${HOME}/.config/nvim ${HOME}/.local

USER dev

WORKDIR ${HOME}/Projects
